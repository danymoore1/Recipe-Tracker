'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3603
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsShopTrvlrHdr"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsShopTrvlrHdr
    Inherits Global.System.Data.DataSet
    
    Private tableShopTraveler As ShopTravelerDataTable
    
    Private tableShopTravelerrpt As ShopTravelerrptDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ShopTraveler")) Is Nothing) Then
                MyBase.Tables.Add(New ShopTravelerDataTable(ds.Tables("ShopTraveler")))
            End If
            If (Not (ds.Tables("ShopTravelerrpt")) Is Nothing) Then
                MyBase.Tables.Add(New ShopTravelerrptDataTable(ds.Tables("ShopTravelerrpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ShopTraveler() As ShopTravelerDataTable
        Get
            Return Me.tableShopTraveler
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ShopTravelerrpt() As ShopTravelerrptDataTable
        Get
            Return Me.tableShopTravelerrpt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsShopTrvlrHdr = CType(MyBase.Clone,dsShopTrvlrHdr)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("ShopTraveler")) Is Nothing) Then
                MyBase.Tables.Add(New ShopTravelerDataTable(ds.Tables("ShopTraveler")))
            End If
            If (Not (ds.Tables("ShopTravelerrpt")) Is Nothing) Then
                MyBase.Tables.Add(New ShopTravelerrptDataTable(ds.Tables("ShopTravelerrpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableShopTraveler = CType(MyBase.Tables("ShopTraveler"),ShopTravelerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableShopTraveler) Is Nothing) Then
                Me.tableShopTraveler.InitVars
            End If
        End If
        Me.tableShopTravelerrpt = CType(MyBase.Tables("ShopTravelerrpt"),ShopTravelerrptDataTable)
        If (initTable = true) Then
            If (Not (Me.tableShopTravelerrpt) Is Nothing) Then
                Me.tableShopTravelerrpt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsShopTrvlrHdr"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsShopTrvlrHdr.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableShopTraveler = New ShopTravelerDataTable
        MyBase.Tables.Add(Me.tableShopTraveler)
        Me.tableShopTravelerrpt = New ShopTravelerrptDataTable
        MyBase.Tables.Add(Me.tableShopTravelerrpt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeShopTraveler() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeShopTravelerrpt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsShopTrvlrHdr = New dsShopTrvlrHdr
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ShopTravelerRowChangeEventHandler(ByVal sender As Object, ByVal e As ShopTravelerRowChangeEvent)
    
    Public Delegate Sub ShopTravelerrptRowChangeEventHandler(ByVal sender As Object, ByVal e As ShopTravelerrptRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ShopTravelerDataTable
        Inherits Global.System.Data.TypedTableBase(Of ShopTravelerRow)
        
        Private columnTravelernum As Global.System.Data.DataColumn
        
        Private columnRecipeHdrUID As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnRunDte As Global.System.Data.DataColumn
        
        Private columnCompleteDte As Global.System.Data.DataColumn
        
        Private columnCompletedQty As Global.System.Data.DataColumn
        
        Private columnWasteQty As Global.System.Data.DataColumn
        
        Private columnBornOn As Global.System.Data.DataColumn
        
        Private columnUserUID As Global.System.Data.DataColumn
        
        Private columnPrinted As Global.System.Data.DataColumn
        
        Private columnLotno As Global.System.Data.DataColumn
        
        Private columnTravelerUID As Global.System.Data.DataColumn
        
        Private columnComplete As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ShopTraveler"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TravelernumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTravelernum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RecipeHdrUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecipeHdrUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RunDteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRunDte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CompleteDteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompleteDte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CompletedQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompletedQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WasteQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWasteQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BornOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBornOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UserUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrintedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrinted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LotnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TravelerUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTravelerUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CompleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComplete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ShopTravelerRow
            Get
                Return CType(Me.Rows(index),ShopTravelerRow)
            End Get
        End Property
        
        Public Event ShopTravelerRowChanging As ShopTravelerRowChangeEventHandler
        
        Public Event ShopTravelerRowChanged As ShopTravelerRowChangeEventHandler
        
        Public Event ShopTravelerRowDeleting As ShopTravelerRowChangeEventHandler
        
        Public Event ShopTravelerRowDeleted As ShopTravelerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddShopTravelerRow(ByVal row As ShopTravelerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddShopTravelerRow(ByVal Travelernum As Integer, ByVal RecipeHdrUID As Integer, ByVal Qty As Decimal, ByVal RunDte As Date, ByVal CompleteDte As Date, ByVal CompletedQty As Integer, ByVal WasteQty As Integer, ByVal BornOn As Date, ByVal UserUID As Integer, ByVal Printed As Boolean, ByVal Lotno As String, ByVal Complete As Boolean) As ShopTravelerRow
            Dim rowShopTravelerRow As ShopTravelerRow = CType(Me.NewRow,ShopTravelerRow)
            Dim columnValuesArray() As Object = New Object() {Travelernum, RecipeHdrUID, Qty, RunDte, CompleteDte, CompletedQty, WasteQty, BornOn, UserUID, Printed, Lotno, Nothing, Complete}
            rowShopTravelerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowShopTravelerRow)
            Return rowShopTravelerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTravelerUID(ByVal TravelerUID As Integer) As ShopTravelerRow
            Return CType(Me.Rows.Find(New Object() {TravelerUID}),ShopTravelerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ShopTravelerDataTable = CType(MyBase.Clone,ShopTravelerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ShopTravelerDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTravelernum = MyBase.Columns("Travelernum")
            Me.columnRecipeHdrUID = MyBase.Columns("RecipeHdrUID")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnRunDte = MyBase.Columns("RunDte")
            Me.columnCompleteDte = MyBase.Columns("CompleteDte")
            Me.columnCompletedQty = MyBase.Columns("CompletedQty")
            Me.columnWasteQty = MyBase.Columns("WasteQty")
            Me.columnBornOn = MyBase.Columns("BornOn")
            Me.columnUserUID = MyBase.Columns("UserUID")
            Me.columnPrinted = MyBase.Columns("Printed")
            Me.columnLotno = MyBase.Columns("Lotno")
            Me.columnTravelerUID = MyBase.Columns("TravelerUID")
            Me.columnComplete = MyBase.Columns("Complete")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTravelernum = New Global.System.Data.DataColumn("Travelernum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTravelernum)
            Me.columnRecipeHdrUID = New Global.System.Data.DataColumn("RecipeHdrUID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecipeHdrUID)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnRunDte = New Global.System.Data.DataColumn("RunDte", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRunDte)
            Me.columnCompleteDte = New Global.System.Data.DataColumn("CompleteDte", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompleteDte)
            Me.columnCompletedQty = New Global.System.Data.DataColumn("CompletedQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompletedQty)
            Me.columnWasteQty = New Global.System.Data.DataColumn("WasteQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWasteQty)
            Me.columnBornOn = New Global.System.Data.DataColumn("BornOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBornOn)
            Me.columnUserUID = New Global.System.Data.DataColumn("UserUID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserUID)
            Me.columnPrinted = New Global.System.Data.DataColumn("Printed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrinted)
            Me.columnLotno = New Global.System.Data.DataColumn("Lotno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotno)
            Me.columnTravelerUID = New Global.System.Data.DataColumn("TravelerUID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTravelerUID)
            Me.columnComplete = New Global.System.Data.DataColumn("Complete", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComplete)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTravelerUID}, true))
            Me.columnTravelernum.AllowDBNull = false
            Me.columnLotno.MaxLength = 20
            Me.columnTravelerUID.AutoIncrement = true
            Me.columnTravelerUID.AutoIncrementSeed = -1
            Me.columnTravelerUID.AutoIncrementStep = -1
            Me.columnTravelerUID.AllowDBNull = false
            Me.columnTravelerUID.ReadOnly = true
            Me.columnTravelerUID.Unique = true
            Me.columnComplete.DefaultValue = CType(false,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewShopTravelerRow() As ShopTravelerRow
            Return CType(Me.NewRow,ShopTravelerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ShopTravelerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ShopTravelerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ShopTravelerRowChangedEvent) Is Nothing) Then
                RaiseEvent ShopTravelerRowChanged(Me, New ShopTravelerRowChangeEvent(CType(e.Row,ShopTravelerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ShopTravelerRowChangingEvent) Is Nothing) Then
                RaiseEvent ShopTravelerRowChanging(Me, New ShopTravelerRowChangeEvent(CType(e.Row,ShopTravelerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ShopTravelerRowDeletedEvent) Is Nothing) Then
                RaiseEvent ShopTravelerRowDeleted(Me, New ShopTravelerRowChangeEvent(CType(e.Row,ShopTravelerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ShopTravelerRowDeletingEvent) Is Nothing) Then
                RaiseEvent ShopTravelerRowDeleting(Me, New ShopTravelerRowChangeEvent(CType(e.Row,ShopTravelerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveShopTravelerRow(ByVal row As ShopTravelerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsShopTrvlrHdr = New dsShopTrvlrHdr
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ShopTravelerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ShopTravelerrptDataTable
        Inherits Global.System.Data.TypedTableBase(Of ShopTravelerrptRow)
        
        Private columnProductNo As Global.System.Data.DataColumn
        
        Private columnShopTravlrno As Global.System.Data.DataColumn
        
        Private columnShopTrvlrDate As Global.System.Data.DataColumn
        
        Private columnRecipeName As Global.System.Data.DataColumn
        
        Private columnStartDate As Global.System.Data.DataColumn
        
        Private columnFinishDate As Global.System.Data.DataColumn
        
        Private columnShopTrvlrQty As Global.System.Data.DataColumn
        
        Private columnItemNo As Global.System.Data.DataColumn
        
        Private columnItemDesc As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnLotno As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ShopTravelerrpt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProductNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShopTravlrnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShopTravlrno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShopTrvlrDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShopTrvlrDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RecipeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecipeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FinishDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinishDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShopTrvlrQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShopTrvlrQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LotnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ShopTravelerrptRow
            Get
                Return CType(Me.Rows(index),ShopTravelerrptRow)
            End Get
        End Property
        
        Public Event ShopTravelerrptRowChanging As ShopTravelerrptRowChangeEventHandler
        
        Public Event ShopTravelerrptRowChanged As ShopTravelerrptRowChangeEventHandler
        
        Public Event ShopTravelerrptRowDeleting As ShopTravelerrptRowChangeEventHandler
        
        Public Event ShopTravelerrptRowDeleted As ShopTravelerrptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddShopTravelerrptRow(ByVal row As ShopTravelerrptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddShopTravelerrptRow(ByVal ProductNo As String, ByVal ShopTravlrno As Integer, ByVal ShopTrvlrDate As Date, ByVal RecipeName As String, ByVal StartDate As Date, ByVal FinishDate As Date, ByVal ShopTrvlrQty As Integer, ByVal ItemNo As String, ByVal ItemDesc As String, ByVal Qty As Decimal, ByVal UOM As String, ByVal Lotno As String) As ShopTravelerrptRow
            Dim rowShopTravelerrptRow As ShopTravelerrptRow = CType(Me.NewRow,ShopTravelerrptRow)
            Dim columnValuesArray() As Object = New Object() {ProductNo, ShopTravlrno, ShopTrvlrDate, RecipeName, StartDate, FinishDate, ShopTrvlrQty, ItemNo, ItemDesc, Qty, UOM, Lotno}
            rowShopTravelerrptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowShopTravelerrptRow)
            Return rowShopTravelerrptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ShopTravelerrptDataTable = CType(MyBase.Clone,ShopTravelerrptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ShopTravelerrptDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnProductNo = MyBase.Columns("ProductNo")
            Me.columnShopTravlrno = MyBase.Columns("ShopTravlrno")
            Me.columnShopTrvlrDate = MyBase.Columns("ShopTrvlrDate")
            Me.columnRecipeName = MyBase.Columns("RecipeName")
            Me.columnStartDate = MyBase.Columns("StartDate")
            Me.columnFinishDate = MyBase.Columns("FinishDate")
            Me.columnShopTrvlrQty = MyBase.Columns("ShopTrvlrQty")
            Me.columnItemNo = MyBase.Columns("ItemNo")
            Me.columnItemDesc = MyBase.Columns("ItemDesc")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnLotno = MyBase.Columns("Lotno")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnProductNo = New Global.System.Data.DataColumn("ProductNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductNo)
            Me.columnShopTravlrno = New Global.System.Data.DataColumn("ShopTravlrno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShopTravlrno)
            Me.columnShopTrvlrDate = New Global.System.Data.DataColumn("ShopTrvlrDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShopTrvlrDate)
            Me.columnRecipeName = New Global.System.Data.DataColumn("RecipeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecipeName)
            Me.columnStartDate = New Global.System.Data.DataColumn("StartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartDate)
            Me.columnFinishDate = New Global.System.Data.DataColumn("FinishDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinishDate)
            Me.columnShopTrvlrQty = New Global.System.Data.DataColumn("ShopTrvlrQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShopTrvlrQty)
            Me.columnItemNo = New Global.System.Data.DataColumn("ItemNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemNo)
            Me.columnItemDesc = New Global.System.Data.DataColumn("ItemDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDesc)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnLotno = New Global.System.Data.DataColumn("Lotno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotno)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewShopTravelerrptRow() As ShopTravelerrptRow
            Return CType(Me.NewRow,ShopTravelerrptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ShopTravelerrptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ShopTravelerrptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ShopTravelerrptRowChangedEvent) Is Nothing) Then
                RaiseEvent ShopTravelerrptRowChanged(Me, New ShopTravelerrptRowChangeEvent(CType(e.Row,ShopTravelerrptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ShopTravelerrptRowChangingEvent) Is Nothing) Then
                RaiseEvent ShopTravelerrptRowChanging(Me, New ShopTravelerrptRowChangeEvent(CType(e.Row,ShopTravelerrptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ShopTravelerrptRowDeletedEvent) Is Nothing) Then
                RaiseEvent ShopTravelerrptRowDeleted(Me, New ShopTravelerrptRowChangeEvent(CType(e.Row,ShopTravelerrptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ShopTravelerrptRowDeletingEvent) Is Nothing) Then
                RaiseEvent ShopTravelerrptRowDeleting(Me, New ShopTravelerrptRowChangeEvent(CType(e.Row,ShopTravelerrptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveShopTravelerrptRow(ByVal row As ShopTravelerrptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsShopTrvlrHdr = New dsShopTrvlrHdr
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ShopTravelerrptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ShopTravelerRow
        Inherits Global.System.Data.DataRow
        
        Private tableShopTraveler As ShopTravelerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableShopTraveler = CType(Me.Table,ShopTravelerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Travelernum() As Integer
            Get
                Return CType(Me(Me.tableShopTraveler.TravelernumColumn),Integer)
            End Get
            Set
                Me(Me.tableShopTraveler.TravelernumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RecipeHdrUID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.RecipeHdrUIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecipeHdrUID' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.RecipeHdrUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RunDte() As Date
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.RunDteColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RunDte' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.RunDteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CompleteDte() As Date
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.CompleteDteColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompleteDte' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.CompleteDteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CompletedQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.CompletedQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompletedQty' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.CompletedQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WasteQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.WasteQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WasteQty' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.WasteQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BornOn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.BornOnColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BornOn' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.BornOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UserUID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.UserUIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserUID' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.UserUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Printed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.PrintedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Printed' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.PrintedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lotno() As String
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.LotnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lotno' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.LotnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TravelerUID() As Integer
            Get
                Return CType(Me(Me.tableShopTraveler.TravelerUIDColumn),Integer)
            End Get
            Set
                Me(Me.tableShopTraveler.TravelerUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Complete() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableShopTraveler.CompleteColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Complete' in table 'ShopTraveler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTraveler.CompleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecipeHdrUIDNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.RecipeHdrUIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecipeHdrUIDNull()
            Me(Me.tableShopTraveler.RecipeHdrUIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQtyNull()
            Me(Me.tableShopTraveler.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRunDteNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.RunDteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRunDteNull()
            Me(Me.tableShopTraveler.RunDteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCompleteDteNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.CompleteDteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCompleteDteNull()
            Me(Me.tableShopTraveler.CompleteDteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCompletedQtyNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.CompletedQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCompletedQtyNull()
            Me(Me.tableShopTraveler.CompletedQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWasteQtyNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.WasteQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWasteQtyNull()
            Me(Me.tableShopTraveler.WasteQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBornOnNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.BornOnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBornOnNull()
            Me(Me.tableShopTraveler.BornOnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUserUIDNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.UserUIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUserUIDNull()
            Me(Me.tableShopTraveler.UserUIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrintedNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.PrintedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrintedNull()
            Me(Me.tableShopTraveler.PrintedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLotnoNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.LotnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLotnoNull()
            Me(Me.tableShopTraveler.LotnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCompleteNull() As Boolean
            Return Me.IsNull(Me.tableShopTraveler.CompleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCompleteNull()
            Me(Me.tableShopTraveler.CompleteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ShopTravelerrptRow
        Inherits Global.System.Data.DataRow
        
        Private tableShopTravelerrpt As ShopTravelerrptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableShopTravelerrpt = CType(Me.Table,ShopTravelerrptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProductNo() As String
            Get
                If Me.IsProductNoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.ProductNoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.ProductNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShopTravlrno() As Integer
            Get
                If Me.IsShopTravlrnoNull Then
                    Return 0
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.ShopTravlrnoColumn),Integer)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.ShopTravlrnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShopTrvlrDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableShopTravelerrpt.ShopTrvlrDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShopTrvlrDate' in table 'ShopTravelerrpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTravelerrpt.ShopTrvlrDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RecipeName() As String
            Get
                If Me.IsRecipeNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.RecipeNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.RecipeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StartDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableShopTravelerrpt.StartDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StartDate' in table 'ShopTravelerrpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTravelerrpt.StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FinishDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableShopTravelerrpt.FinishDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinishDate' in table 'ShopTravelerrpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableShopTravelerrpt.FinishDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShopTrvlrQty() As Integer
            Get
                If Me.IsShopTrvlrQtyNull Then
                    Return 0
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.ShopTrvlrQtyColumn),Integer)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.ShopTrvlrQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemNo() As String
            Get
                If Me.IsItemNoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.ItemNoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.ItemNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemDesc() As String
            Get
                If Me.IsItemDescNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.ItemDescColumn),String)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.ItemDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Qty() As Decimal
            Get
                If Me.IsQtyNull Then
                    Return 0
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.QtyColumn),Decimal)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UOM() As String
            Get
                If Me.IsUOMNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.UOMColumn),String)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lotno() As String
            Get
                If Me.IsLotnoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableShopTravelerrpt.LotnoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableShopTravelerrpt.LotnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProductNoNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.ProductNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProductNoNull()
            Me(Me.tableShopTravelerrpt.ProductNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShopTravlrnoNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.ShopTravlrnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShopTravlrnoNull()
            Me(Me.tableShopTravelerrpt.ShopTravlrnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShopTrvlrDateNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.ShopTrvlrDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShopTrvlrDateNull()
            Me(Me.tableShopTravelerrpt.ShopTrvlrDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecipeNameNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.RecipeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecipeNameNull()
            Me(Me.tableShopTravelerrpt.RecipeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStartDateNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.StartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStartDateNull()
            Me(Me.tableShopTravelerrpt.StartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFinishDateNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.FinishDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFinishDateNull()
            Me(Me.tableShopTravelerrpt.FinishDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShopTrvlrQtyNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.ShopTrvlrQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShopTrvlrQtyNull()
            Me(Me.tableShopTravelerrpt.ShopTrvlrQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemNoNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.ItemNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemNoNull()
            Me(Me.tableShopTravelerrpt.ItemNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemDescNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.ItemDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemDescNull()
            Me(Me.tableShopTravelerrpt.ItemDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetQtyNull()
            Me(Me.tableShopTravelerrpt.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUOMNull()
            Me(Me.tableShopTravelerrpt.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLotnoNull() As Boolean
            Return Me.IsNull(Me.tableShopTravelerrpt.LotnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLotnoNull()
            Me(Me.tableShopTravelerrpt.LotnoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ShopTravelerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ShopTravelerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ShopTravelerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ShopTravelerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ShopTravelerrptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ShopTravelerrptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ShopTravelerrptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ShopTravelerrptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
